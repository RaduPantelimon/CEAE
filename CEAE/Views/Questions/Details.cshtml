@using CEAE.Utils
@model CEAE.Models.DTO.Question
@{
    ViewBag.Title = Translations.Details;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <h2>@Translations.Details</h2>

    <div>
        <h4>@Translations.Question</h4>
        <hr />
        <table class="table">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Title)</th>
                    <th>@Html.DisplayNameFor(model => model.Text)</th>

                </tr>
            </thead>
            <tr>
                <td>
                    @Html.DisplayFor(model => model.Title)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Text)
                </td>
            </tr>
        </table>
    </div>
    <form id="answers-container" class="form-horizontal">
        <div id="added-answers" class="form-group">
        </div>
        <div class="text-danger answers-validation alert alert-danger" style="display: none;">
            <span class="answers-validation-message"></span>
        </div>
        <p class="btn-group">
            <button id="new-answer" class="btn btn-primary" type="button">@Translations.AddNewAnswer</button>
        @Html.ActionLink(Translations.Edit, "Edit", new { id = Model.QuestionID }, new { @class = "btn btn-default" })
        @Html.ActionLink(Translations.BackToList, "Index", null, new { @class = "btn btn-default" })
        </p>
    </form>
</div>
@section Scripts {
    <script>
        var possibleAnswers = @Html.Raw(ViewBag.serializedAnswers);
        var QuestionID = @Html.Raw(Model.QuestionID);
        var answerStatuses = @Html.Raw(Json.Encode(Constants.AnswerOptions));
    </script>
    <script src="~/Scripts/QuestionScripts/question_viewDetails.js"></script>
}