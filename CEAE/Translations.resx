<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessDenied" xml:space="preserve">
    <value>Access Denied</value>
  </data>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="AccountNamePossible" xml:space="preserve">
    <value>Use your username instead by registering!</value>
  </data>
  <data name="AccountRequired" xml:space="preserve">
    <value>Account is required!</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="AddNewAnswer" xml:space="preserve">
    <value>Add New Answer</value>
  </data>
  <data name="Administrator" xml:space="preserve">
    <value>User Role</value>
  </data>
  <data name="AdministratorRequired" xml:space="preserve">
    <value>User Role required!</value>
  </data>
  <data name="Answer" xml:space="preserve">
    <value>Answer</value>
  </data>
  <data name="AnswerHasQuestionAssociatedCannotContinueRemoveAssociationAndRetry" xml:space="preserve">
    <value>Answer has a question associated. Cannot Continue. Remove association and retry.</value>
  </data>
  <data name="AnswerIDRequired" xml:space="preserve">
    <value>Answer ID is required!</value>
  </data>
  <data name="Answers" xml:space="preserve">
    <value>Answers</value>
  </data>
  <data name="AreYouSureYouWantToDeleteThis" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="ConfirmPasswordRequired" xml:space="preserve">
    <value>Confirmation Password is required!</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateUser" xml:space="preserve">
    <value>Create user</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailAddressSavedSuccessfully" xml:space="preserve">
    <value>Email address saved successfully</value>
  </data>
  <data name="EmailInvalid" xml:space="preserve">
    <value>Email address is invalid!</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email address is required!</value>
  </data>
  <data name="EmailUndefined" xml:space="preserve">
    <value>Email not set!</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="FirstNameRequired" xml:space="preserve">
    <value>First Name is required!</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="ImageRequired" xml:space="preserve">
    <value>Image is required!</value>
  </data>
  <data name="ImgPath" xml:space="preserve">
    <value>Avatar URL</value>
  </data>
  <data name="InvalidLogin" xml:space="preserve">
    <value>Invalid login attempt.</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="LastNameRequired" xml:space="preserve">
    <value>Last Name is required!</value>
  </data>
  <data name="LoadingTest" xml:space="preserve">
    <value>Loading the test...</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="ManageAccount" xml:space="preserve">
    <value>Manage Account</value>
  </data>
  <data name="ModelInvalid" xml:space="preserve">
    <value>Model is invalid!</value>
  </data>
  <data name="Mr" xml:space="preserve">
    <value>Mr.</value>
  </data>
  <data name="Mrs" xml:space="preserve">
    <value>Mrs.</value>
  </data>
  <data name="Ms" xml:space="preserve">
    <value>Ms.</value>
  </data>
  <data name="NextQuestion" xml:space="preserve">
    <value>Next Question</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old Password</value>
  </data>
  <data name="OldPasswordRequired" xml:space="preserve">
    <value>Old Password is required!</value>
  </data>
  <data name="OrOldPasswordError" xml:space="preserve">
    <value>Or Old Password is not correct!</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordLengthRequired" xml:space="preserve">
    <value>The {0} must be at least {2} characters long.</value>
    <comment>{0} = Password, {2} = Password Length, apparently.</comment>
  </data>
  <data name="PasswordMismatch" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is required!</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone #</value>
  </data>
  <data name="PhoneNumberRequired" xml:space="preserve">
    <value>Phone Number is required!</value>
  </data>
  <data name="PleaseProvideEmailAddress" xml:space="preserve">
    <value>Please provide an email address to finish this quiz!</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="PreviousQuestion" xml:space="preserve">
    <value>Previous Question</value>
  </data>
  <data name="Properties" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="QuestionIDRequired" xml:space="preserve">
    <value>Question ID is required!</value>
  </data>
  <data name="Questions" xml:space="preserve">
    <value>Questions</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember Me?</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="StartTest" xml:space="preserve">
    <value>Start Test</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="SubmitEmail" xml:space="preserve">
    <value>Submit Email</value>
  </data>
  <data name="TakeTest" xml:space="preserve">
    <value>Find Out How You Think</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="TextRequired" xml:space="preserve">
    <value>Text is required!</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TitleRequired" xml:space="preserve">
    <value>Title is required!</value>
  </data>
  <data name="UserIDRequired" xml:space="preserve">
    <value>User ID is required!</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>